{{- define "immich.server.hardcodedValues" -}}
global:
  nameOverride: server

env:
  {{ if .Values.immich.metrics.enabled }}
      IMMICH_TELEMETRY_INCLUDE: all
  {{ end }}
  {{- if .Values.immich.configuration }}
      IMMICH_CONFIG_FILE: /config/immich-config.yaml
  {{- end }}

{{- if .Values.immich.configuration }}
podAnnotations:
  checksum/config: {{ .Values.immich.configuration | toYaml | sha256sum }}
{{- end }}

controllers:
  main:
    strategy: RollingUpdate
    containers:
      &app immich-server:
        image:
          tag: {{ .Values.image.tag }}
        env:
          {{ toYaml .Values.env | nindent 10 }}
        ports:
          - name: http
            containerPort: &port 2283
            protocol: TCP
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /api/server/ping
                port: http
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
          startup:
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /api/server/ping
                port: http
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 30

service:
  main:
    controller: main
    type: ClusterIP
    ports:
      http:
        port: *port
        protocol: HTTP
      metrics-api:
        enabled: {{ .Values.immich.metrics.enabled }}
        port: 8081
        protocol: HTTP
      metrics-ms:
        enabled: {{ .Values.immich.metrics.enabled }}
        port: 8082
        protocol: HTTP


serviceMonitor:
  main:
    enabled: {{ .Values.immich.metrics.enabled }}
    endpoints:
      - port: metrics-api
        scheme: http
      - port: metrics-ms
        scheme: http

persistence:
{{- if .Values.immich.configuration }}
  config:
    type: configMap
    name: {{ .Release.Name }}-immich-config
{{- end }}
  library:
    existingClaim: {{ .Values.immich.persistence.library.existingClaim }}
    advancedMounts:
      main:
        *app:
          - path: /usr/src/app/upload
{{- end }}

{{ if .Values.server.enabled }}
{{- $ctx := deepCopy . -}}
{{- $_ := get .Values "server" | mergeOverwrite $ctx.Values -}}
{{- $_ = include "immich.server.hardcodedValues" . | fromYaml | merge $ctx.Values -}}
{{- include "bjw-s.common.loader.all" $ctx }}
{{ end }}
