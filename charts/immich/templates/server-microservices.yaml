{{- define "immich.microservices.hardcodedValues" -}}
global:
  nameOverride: microservices

env:
  {{ if .Values.immich.metrics.enabled }}
      IMMICH_TELEMETRY_INCLUDE: all
  {{ end }}
  {{- if .Values.immich.configuration }}
      IMMICH_CONFIG_FILE: /config/immich-config.yaml
  {{- end }}
      IMMICH_WORKERS_EXCLUDE: 'api'

{{- if .Values.immich.configuration }}
podAnnotations:
  checksum/config: {{ .Values.immich.configuration | toYaml | sha256sum }}
{{- end }}

controller:
  strategy: RollingUpdate

service:
  main:
    enabled: false

probes:
  liveness: &probes
    enabled: true
    custom: true
    spec:
      exec:
        command:
        - immich-healthcheck
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
  readiness: *probes
  startup:
    enabled: true
    custom: true
    spec:
      exec:
        command:
        - immich-healthcheck
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 30

persistence:
{{- if .Values.immich.configuration }}
  config:
    enabled: true
    type: configMap
    name: {{ .Release.Name }}-immich-config
{{- end }}
  library:
    enabled: true
    mountPath: /usr/src/app/upload
    existingClaim: {{ .Values.immich.persistence.library.existingClaim }}
{{- end }}

{{ if .Values.microservices.enabled }}
{{- $ctx := deepCopy . -}}
{{- $_ := get .Values "microservices" | mergeOverwrite $ctx.Values -}}
{{- $_ = include "immich.microservices.hardcodedValues" . | fromYaml | merge $ctx.Values -}}
{{- include "bjw-s.common.loader.all" $ctx }}
{{ end }}
